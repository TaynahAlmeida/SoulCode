/// Retorne todas as contas agrupadas pelo tipo de Negócio

SELECT COUNT(Name), Industry FROM Account Group By Industry

// Some os valores de todas as oportunidades que foram perdidas no ultimo mês e agrupe pelo motivo da perda

SELECT Sum(Amount) FROM Opportunity WHERE StageName = 'Closet Lost' AND
CloseDate = Last_Month GROUP BY MotivoPerda__c

// Retorne todos os contatos das contas que possuem contas pai

Select ParentId, name, (SELECT name from Contacts )From Account

// Retorne o número de registros de contatos  da conta 'Restaurante Gifara' 

SELECT Count(Name) FROM Contact WHERE Account.Name = 'Restaurante Gifara'

// Retorne o número de registros de Oportunidades  da conta 'Restaurante Gifara' 

SELECT Count(Id) FROM Opportunity WHERE Account.Name = 'Restaurante Gifara'

// Selecione todos os usuários que fizeram o login mês passado

SELECT Username, LastLoginDate from User where LastLoginDate = Last_month

// Selecione o Id e Nome dos tipos de registro do objeto Despesa e Oportunidade

SELECT Id, Name, Type,(SELECT Id, Name, TiposDeRegistro_c FROM Despesas_r )
FROM Opportunity

// Selecione todos os Leads que possuem o Email igual

SELECT Email, COUNT(Id) FROM Lead GROUP BY Email

// Selecione todas as contas que começam com Soul e Terminam com Code

SELECT Id, Name FROM Account WHERE Name Like 'Soul%' AND Name Like '%Code'

// Selecione todos os casos que são estão abertos mais de 2 semanas

SELECT Casenumber, CreatedDate From Case where CreatedDate = Last_N_Days:14

// Selecione qual são os tipos de caso que são mais abertos durante o mês atual

SELECT Type, Count(Id) From Case where CreatedDate = THIS_MONTH Group By Type
ORDER BY COUNT(Id) DESC

// Selecione quais são as despesas criadas por empresas que estão inativas

SELECT Name, DespesasAtivas__C FROM Empresa__c WHERE DespesasAtivas__C =
False

// O Time de negócios gostaria de saber quais são os clientes que possuem o melhor faturamento, e quais são os tipos de empresa que possuem.

SELECT Name, Faturamento__c,TipoEmpresa__c FROM Customer WHERE
Faturamento__c = 'Alto'

// Retorne quais contas foram criadas/alteradas por usuários que não são administradores do Sistema.

SELECT name, CreatedBy.Profile.Name, LastModifiedBy.Profile.name FROM account
WHERE CreatedBy.Profile.Name != 'Administrador do sistema' OR
LastModifiedBy.Profile.name != 'Administrador do sistema


//Imprima no apex o nome e status dos leads com status “working” e os “not contacted” e que possuam ‘Co’ em qualquer parte do nome''.

1.List <Lead> Leads= [SELECT Name, Status FROM Lead WHERE (Status = 'Working - Contacted' OR
Status = 'Open - Not Contacted') AND Name LIKE '%Co%'];
For( Lead ld : Leads){
System.debug('Informações sobre o Lead');
System.debug('Nome do Lead: ' + ld.name);
System.debug('Status do Lead: ' + ld.status);
System.debug('\n');
}


//Imprima no apex o nome, cargo e telefone dos contatos que possua United ou Ltd em qualquer parte do nome da conta.

List<Contact> contatos = [Select Name, Title, Phone, Account.Name From Contact Where Account.name Like '%United%' Or Account.name Like '%Ltd%'];

For(Contact contact:contatos){
    System.debug('Informações');
    System.debug('Nome: ' + contact.name);
    System.debug('Cargo: ' + contact.Title);
    System.debug('Telefone: ' + contact.Phone);
    System.debug('Nome da Conta: ' + contact.Account.Name);
    System.debug('\n');
}


//Imprima em apex o nome, phone, rating, data de criação das contas ordenados por data de criação decrescente, mostrando também o nome e telefone dos contatos ordenados por nome ligados a cada uma das contas.

List <Account> Accounts = [SELECT Name, Phone, Rating, FORMAT(CreatedDate),(SELECT Name,Phone FROM Contacts ORDER BY Name) FROM Account ORDER BY CreatedDate Desc ];
For( Account acc : Accounts){
System.debug('Informações sobre o Conta');
System.debug('Nome da Conta: ' + acc.name);
System.debug('Telefone da Conta: ' + acc.phone);
System.debug('Classificação da Conta: ' + acc.rating);
System.debug('Data de Criação: ' + acc.createdDate);
System.debug('\n');

for(Contact contato : acc.contacts){
    system.debug('Informações do Contato');    
    system.debug('Nome: '+ contato.Name); 
    system.debug('Cargo: '+ contato.Title); 
    system.debug('Telefone: ' + contato.Phone); 
    system.debug('\n'); 
}
}

